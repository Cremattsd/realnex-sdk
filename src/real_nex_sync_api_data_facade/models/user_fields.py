# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .utils.base_model import BaseModel


@JsonMap({})
class UserFields(BaseModel):
    """UserFields

    :param user1: user1, defaults to None
    :type user1: str, optional
    :param user2: user2, defaults to None
    :type user2: str, optional
    :param user3: user3, defaults to None
    :type user3: str, optional
    :param user4: user4, defaults to None
    :type user4: str, optional
    :param user5: user5, defaults to None
    :type user5: str, optional
    :param user6: user6, defaults to None
    :type user6: str, optional
    :param user7: user7, defaults to None
    :type user7: str, optional
    :param user8: user8, defaults to None
    :type user8: str, optional
    :param user9: user9, defaults to None
    :type user9: str, optional
    :param user10: user10, defaults to None
    :type user10: str, optional
    :param user11: user11, defaults to None
    :type user11: str, optional
    :param user12: user12, defaults to None
    :type user12: str, optional
    :param user13: user13, defaults to None
    :type user13: str, optional
    :param user14: user14, defaults to None
    :type user14: str, optional
    :param user15: user15, defaults to None
    :type user15: str, optional
    :param user16: user16, defaults to None
    :type user16: str, optional
    :param user17: user17, defaults to None
    :type user17: str, optional
    :param user18: user18, defaults to None
    :type user18: str, optional
    :param user19: user19, defaults to None
    :type user19: str, optional
    :param user20: user20, defaults to None
    :type user20: str, optional
    :param user21: user21, defaults to None
    :type user21: str, optional
    :param user22: user22, defaults to None
    :type user22: str, optional
    :param user23: user23, defaults to None
    :type user23: str, optional
    :param user24: user24, defaults to None
    :type user24: str, optional
    :param user25: user25, defaults to None
    :type user25: str, optional
    :param user26: user26, defaults to None
    :type user26: str, optional
    :param user27: user27, defaults to None
    :type user27: str, optional
    :param user28: user28, defaults to None
    :type user28: str, optional
    :param user29: user29, defaults to None
    :type user29: str, optional
    :param user30: user30, defaults to None
    :type user30: str, optional
    """

    def __init__(
        self,
        user1: str = None,
        user2: str = None,
        user3: str = None,
        user4: str = None,
        user5: str = None,
        user6: str = None,
        user7: str = None,
        user8: str = None,
        user9: str = None,
        user10: str = None,
        user11: str = None,
        user12: str = None,
        user13: str = None,
        user14: str = None,
        user15: str = None,
        user16: str = None,
        user17: str = None,
        user18: str = None,
        user19: str = None,
        user20: str = None,
        user21: str = None,
        user22: str = None,
        user23: str = None,
        user24: str = None,
        user25: str = None,
        user26: str = None,
        user27: str = None,
        user28: str = None,
        user29: str = None,
        user30: str = None,
        **kwargs
    ):
        """UserFields

        :param user1: user1, defaults to None
        :type user1: str, optional
        :param user2: user2, defaults to None
        :type user2: str, optional
        :param user3: user3, defaults to None
        :type user3: str, optional
        :param user4: user4, defaults to None
        :type user4: str, optional
        :param user5: user5, defaults to None
        :type user5: str, optional
        :param user6: user6, defaults to None
        :type user6: str, optional
        :param user7: user7, defaults to None
        :type user7: str, optional
        :param user8: user8, defaults to None
        :type user8: str, optional
        :param user9: user9, defaults to None
        :type user9: str, optional
        :param user10: user10, defaults to None
        :type user10: str, optional
        :param user11: user11, defaults to None
        :type user11: str, optional
        :param user12: user12, defaults to None
        :type user12: str, optional
        :param user13: user13, defaults to None
        :type user13: str, optional
        :param user14: user14, defaults to None
        :type user14: str, optional
        :param user15: user15, defaults to None
        :type user15: str, optional
        :param user16: user16, defaults to None
        :type user16: str, optional
        :param user17: user17, defaults to None
        :type user17: str, optional
        :param user18: user18, defaults to None
        :type user18: str, optional
        :param user19: user19, defaults to None
        :type user19: str, optional
        :param user20: user20, defaults to None
        :type user20: str, optional
        :param user21: user21, defaults to None
        :type user21: str, optional
        :param user22: user22, defaults to None
        :type user22: str, optional
        :param user23: user23, defaults to None
        :type user23: str, optional
        :param user24: user24, defaults to None
        :type user24: str, optional
        :param user25: user25, defaults to None
        :type user25: str, optional
        :param user26: user26, defaults to None
        :type user26: str, optional
        :param user27: user27, defaults to None
        :type user27: str, optional
        :param user28: user28, defaults to None
        :type user28: str, optional
        :param user29: user29, defaults to None
        :type user29: str, optional
        :param user30: user30, defaults to None
        :type user30: str, optional
        """
        if user1 is not None:
            self.user1 = self._define_str("user1", user1, nullable=True)
        if user2 is not None:
            self.user2 = self._define_str("user2", user2, nullable=True)
        if user3 is not None:
            self.user3 = self._define_str("user3", user3, nullable=True)
        if user4 is not None:
            self.user4 = self._define_str("user4", user4, nullable=True)
        if user5 is not None:
            self.user5 = self._define_str("user5", user5, nullable=True)
        if user6 is not None:
            self.user6 = self._define_str("user6", user6, nullable=True)
        if user7 is not None:
            self.user7 = self._define_str("user7", user7, nullable=True)
        if user8 is not None:
            self.user8 = self._define_str("user8", user8, nullable=True)
        if user9 is not None:
            self.user9 = self._define_str("user9", user9, nullable=True)
        if user10 is not None:
            self.user10 = self._define_str("user10", user10, nullable=True)
        if user11 is not None:
            self.user11 = self._define_str("user11", user11, nullable=True)
        if user12 is not None:
            self.user12 = self._define_str("user12", user12, nullable=True)
        if user13 is not None:
            self.user13 = self._define_str("user13", user13, nullable=True)
        if user14 is not None:
            self.user14 = self._define_str("user14", user14, nullable=True)
        if user15 is not None:
            self.user15 = self._define_str("user15", user15, nullable=True)
        if user16 is not None:
            self.user16 = self._define_str("user16", user16, nullable=True)
        if user17 is not None:
            self.user17 = self._define_str("user17", user17, nullable=True)
        if user18 is not None:
            self.user18 = self._define_str("user18", user18, nullable=True)
        if user19 is not None:
            self.user19 = self._define_str("user19", user19, nullable=True)
        if user20 is not None:
            self.user20 = self._define_str("user20", user20, nullable=True)
        if user21 is not None:
            self.user21 = self._define_str("user21", user21, nullable=True)
        if user22 is not None:
            self.user22 = self._define_str("user22", user22, nullable=True)
        if user23 is not None:
            self.user23 = self._define_str("user23", user23, nullable=True)
        if user24 is not None:
            self.user24 = self._define_str("user24", user24, nullable=True)
        if user25 is not None:
            self.user25 = self._define_str("user25", user25, nullable=True)
        if user26 is not None:
            self.user26 = self._define_str("user26", user26, nullable=True)
        if user27 is not None:
            self.user27 = self._define_str("user27", user27, nullable=True)
        if user28 is not None:
            self.user28 = self._define_str("user28", user28, nullable=True)
        if user29 is not None:
            self.user29 = self._define_str("user29", user29, nullable=True)
        if user30 is not None:
            self.user30 = self._define_str("user30", user30, nullable=True)
        self._kwargs = kwargs
