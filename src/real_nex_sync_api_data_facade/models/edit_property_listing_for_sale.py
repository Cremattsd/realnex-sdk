# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .utils.base_model import BaseModel


@JsonMap(
    {
        "sale_price": "salePrice",
        "cap_rate": "capRate",
        "down_payment": "downPayment",
        "percent_down": "percentDown",
        "loan_amount": "loanAmount",
        "cash_flow": "cashFlow",
        "base_rent": "baseRent",
        "cash_on_cash": "cashOnCash",
        "payments_yr": "paymentsYr",
        "vacancy_factor": "vacancyFactor",
        "debt_service": "debtService",
        "auto_calc": "autoCalc",
        "price_acre": "priceAcre",
        "price_foot": "priceFoot",
        "price_unit": "priceUnit",
        "sale_list_acq": "saleListAcq",
        "sale_list_exp": "saleListExp",
        "loan_maturity": "loanMaturity",
        "loan_origination": "loanOrigination",
        "sale_list_no": "saleListNo",
        "loan_type": "loanType",
    }
)
class EditPropertyListingForSale(BaseModel):
    """EditPropertyListingForSale

    :param sale_price: sale_price, defaults to None
    :type sale_price: float, optional
    :param expenses: expenses, defaults to None
    :type expenses: float, optional
    :param cap_rate: cap_rate, defaults to None
    :type cap_rate: float, optional
    :param down_payment: down_payment, defaults to None
    :type down_payment: float, optional
    :param noi: noi, defaults to None
    :type noi: float, optional
    :param grm: grm, defaults to None
    :type grm: float, optional
    :param percent_down: percent_down, defaults to None
    :type percent_down: float, optional
    :param loan_amount: loan_amount, defaults to None
    :type loan_amount: float, optional
    :param cash_flow: cash_flow, defaults to None
    :type cash_flow: float, optional
    :param base_rent: base_rent, defaults to None
    :type base_rent: float, optional
    :param interest: interest, defaults to None
    :type interest: float, optional
    :param cash_on_cash: cash_on_cash, defaults to None
    :type cash_on_cash: float, optional
    :param reimburse: reimburse, defaults to None
    :type reimburse: float, optional
    :param years: years, defaults to None
    :type years: int, optional
    :param gsi: gsi, defaults to None
    :type gsi: float, optional
    :param payments_yr: payments_yr, defaults to None
    :type payments_yr: int, optional
    :param vacancy_factor: vacancy_factor, defaults to None
    :type vacancy_factor: float, optional
    :param debt_service: debt_service, defaults to None
    :type debt_service: float, optional
    :param effective: effective, defaults to None
    :type effective: float, optional
    :param auto_calc: auto_calc, defaults to None
    :type auto_calc: bool, optional
    :param price_acre: price_acre, defaults to None
    :type price_acre: float, optional
    :param price_foot: price_foot, defaults to None
    :type price_foot: float, optional
    :param price_unit: price_unit, defaults to None
    :type price_unit: float, optional
    :param sale_list_acq: sale_list_acq, defaults to None
    :type sale_list_acq: str, optional
    :param sale_list_exp: sale_list_exp, defaults to None
    :type sale_list_exp: str, optional
    :param loan_maturity: loan_maturity, defaults to None
    :type loan_maturity: str, optional
    :param loan_origination: loan_origination, defaults to None
    :type loan_origination: str, optional
    :param sale_list_no: sale_list_no, defaults to None
    :type sale_list_no: str, optional
    :param irr: irr, defaults to None
    :type irr: float, optional
    :param lender: lender, defaults to None
    :type lender: str, optional
    :param loan_type: loan_type, defaults to None
    :type loan_type: str, optional
    """

    def __init__(
        self,
        sale_price: float = None,
        expenses: float = None,
        cap_rate: float = None,
        down_payment: float = None,
        noi: float = None,
        grm: float = None,
        percent_down: float = None,
        loan_amount: float = None,
        cash_flow: float = None,
        base_rent: float = None,
        interest: float = None,
        cash_on_cash: float = None,
        reimburse: float = None,
        years: int = None,
        gsi: float = None,
        payments_yr: int = None,
        vacancy_factor: float = None,
        debt_service: float = None,
        effective: float = None,
        auto_calc: bool = None,
        price_acre: float = None,
        price_foot: float = None,
        price_unit: float = None,
        sale_list_acq: str = None,
        sale_list_exp: str = None,
        loan_maturity: str = None,
        loan_origination: str = None,
        sale_list_no: str = None,
        irr: float = None,
        lender: str = None,
        loan_type: str = None,
        **kwargs
    ):
        """EditPropertyListingForSale

        :param sale_price: sale_price, defaults to None
        :type sale_price: float, optional
        :param expenses: expenses, defaults to None
        :type expenses: float, optional
        :param cap_rate: cap_rate, defaults to None
        :type cap_rate: float, optional
        :param down_payment: down_payment, defaults to None
        :type down_payment: float, optional
        :param noi: noi, defaults to None
        :type noi: float, optional
        :param grm: grm, defaults to None
        :type grm: float, optional
        :param percent_down: percent_down, defaults to None
        :type percent_down: float, optional
        :param loan_amount: loan_amount, defaults to None
        :type loan_amount: float, optional
        :param cash_flow: cash_flow, defaults to None
        :type cash_flow: float, optional
        :param base_rent: base_rent, defaults to None
        :type base_rent: float, optional
        :param interest: interest, defaults to None
        :type interest: float, optional
        :param cash_on_cash: cash_on_cash, defaults to None
        :type cash_on_cash: float, optional
        :param reimburse: reimburse, defaults to None
        :type reimburse: float, optional
        :param years: years, defaults to None
        :type years: int, optional
        :param gsi: gsi, defaults to None
        :type gsi: float, optional
        :param payments_yr: payments_yr, defaults to None
        :type payments_yr: int, optional
        :param vacancy_factor: vacancy_factor, defaults to None
        :type vacancy_factor: float, optional
        :param debt_service: debt_service, defaults to None
        :type debt_service: float, optional
        :param effective: effective, defaults to None
        :type effective: float, optional
        :param auto_calc: auto_calc, defaults to None
        :type auto_calc: bool, optional
        :param price_acre: price_acre, defaults to None
        :type price_acre: float, optional
        :param price_foot: price_foot, defaults to None
        :type price_foot: float, optional
        :param price_unit: price_unit, defaults to None
        :type price_unit: float, optional
        :param sale_list_acq: sale_list_acq, defaults to None
        :type sale_list_acq: str, optional
        :param sale_list_exp: sale_list_exp, defaults to None
        :type sale_list_exp: str, optional
        :param loan_maturity: loan_maturity, defaults to None
        :type loan_maturity: str, optional
        :param loan_origination: loan_origination, defaults to None
        :type loan_origination: str, optional
        :param sale_list_no: sale_list_no, defaults to None
        :type sale_list_no: str, optional
        :param irr: irr, defaults to None
        :type irr: float, optional
        :param lender: lender, defaults to None
        :type lender: str, optional
        :param loan_type: loan_type, defaults to None
        :type loan_type: str, optional
        """
        if sale_price is not None:
            self.sale_price = self._define_number(
                "sale_price", sale_price, nullable=True
            )
        if expenses is not None:
            self.expenses = self._define_number("expenses", expenses, nullable=True)
        if cap_rate is not None:
            self.cap_rate = self._define_number("cap_rate", cap_rate, nullable=True)
        if down_payment is not None:
            self.down_payment = self._define_number(
                "down_payment", down_payment, nullable=True
            )
        if noi is not None:
            self.noi = self._define_number("noi", noi, nullable=True)
        if grm is not None:
            self.grm = self._define_number("grm", grm, nullable=True)
        if percent_down is not None:
            self.percent_down = self._define_number(
                "percent_down", percent_down, nullable=True
            )
        if loan_amount is not None:
            self.loan_amount = self._define_number(
                "loan_amount", loan_amount, nullable=True
            )
        if cash_flow is not None:
            self.cash_flow = self._define_number("cash_flow", cash_flow, nullable=True)
        if base_rent is not None:
            self.base_rent = self._define_number("base_rent", base_rent, nullable=True)
        if interest is not None:
            self.interest = self._define_number("interest", interest, nullable=True)
        if cash_on_cash is not None:
            self.cash_on_cash = self._define_number(
                "cash_on_cash", cash_on_cash, nullable=True
            )
        if reimburse is not None:
            self.reimburse = self._define_number("reimburse", reimburse, nullable=True)
        if years is not None:
            self.years = self._define_number("years", years, nullable=True)
        if gsi is not None:
            self.gsi = self._define_number("gsi", gsi, nullable=True)
        if payments_yr is not None:
            self.payments_yr = self._define_number(
                "payments_yr", payments_yr, nullable=True
            )
        if vacancy_factor is not None:
            self.vacancy_factor = self._define_number(
                "vacancy_factor", vacancy_factor, nullable=True
            )
        if debt_service is not None:
            self.debt_service = self._define_number(
                "debt_service", debt_service, nullable=True
            )
        if effective is not None:
            self.effective = self._define_number("effective", effective, nullable=True)
        if auto_calc is not None:
            self.auto_calc = auto_calc
        if price_acre is not None:
            self.price_acre = self._define_number(
                "price_acre", price_acre, nullable=True
            )
        if price_foot is not None:
            self.price_foot = self._define_number(
                "price_foot", price_foot, nullable=True
            )
        if price_unit is not None:
            self.price_unit = self._define_number(
                "price_unit", price_unit, nullable=True
            )
        if sale_list_acq is not None:
            self.sale_list_acq = self._define_str(
                "sale_list_acq", sale_list_acq, nullable=True
            )
        if sale_list_exp is not None:
            self.sale_list_exp = self._define_str(
                "sale_list_exp", sale_list_exp, nullable=True
            )
        if loan_maturity is not None:
            self.loan_maturity = self._define_str(
                "loan_maturity", loan_maturity, nullable=True
            )
        if loan_origination is not None:
            self.loan_origination = self._define_str(
                "loan_origination", loan_origination, nullable=True
            )
        if sale_list_no is not None:
            self.sale_list_no = self._define_str(
                "sale_list_no", sale_list_no, nullable=True
            )
        if irr is not None:
            self.irr = self._define_number("irr", irr, nullable=True)
        if lender is not None:
            self.lender = self._define_str("lender", lender, nullable=True)
        if loan_type is not None:
            self.loan_type = self._define_str("loan_type", loan_type, nullable=True)
        self._kwargs = kwargs
