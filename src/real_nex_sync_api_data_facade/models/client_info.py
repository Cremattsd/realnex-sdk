# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .utils.base_model import BaseModel


@JsonMap({"id_": "id", "type_": "type", "client_name": "clientName"})
class ClientInfo(BaseModel):
    """ClientInfo

    :param id_: id_, defaults to None
    :type id_: str, optional
    :param type_: type_, defaults to None
    :type type_: str, optional
    :param client_name: client_name, defaults to None
    :type client_name: str, optional
    """

    def __init__(
        self, id_: str = None, type_: str = None, client_name: str = None, **kwargs
    ):
        """ClientInfo

        :param id_: id_, defaults to None
        :type id_: str, optional
        :param type_: type_, defaults to None
        :type type_: str, optional
        :param client_name: client_name, defaults to None
        :type client_name: str, optional
        """
        if id_ is not None:
            self.id_ = self._define_str("id_", id_, nullable=True)
        if type_ is not None:
            self.type_ = self._define_str("type_", type_, nullable=True)
        if client_name is not None:
            self.client_name = self._define_str(
                "client_name", client_name, nullable=True
            )
        self._kwargs = kwargs
