# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .utils.base_model import BaseModel
from .property_contact_role import PropertyContactRole
from .address import Address


@JsonMap(
    {
        "is_contact": "isContact",
        "contact_name": "contactName",
        "contact_phone": "contactPhone",
        "company_name": "companyName",
        "company_organization": "companyOrganization",
        "company_web_site": "companyWebSite",
        "company_phone": "companyPhone",
        "web_site": "webSite",
        "home_phone": "homePhone",
    }
)
class PropertyContact(BaseModel):
    """PropertyContact

    :param role: role, defaults to None
    :type role: PropertyContactRole, optional
    :param is_contact: is_contact, defaults to None
    :type is_contact: bool, optional
    :param name: name, defaults to None
    :type name: str, optional
    :param contact_name: contact_name, defaults to None
    :type contact_name: str, optional
    :param contact_phone: contact_phone, defaults to None
    :type contact_phone: str, optional
    :param company_name: company_name, defaults to None
    :type company_name: str, optional
    :param company_organization: company_organization, defaults to None
    :type company_organization: str, optional
    :param company_web_site: company_web_site, defaults to None
    :type company_web_site: str, optional
    :param company_phone: company_phone, defaults to None
    :type company_phone: str, optional
    :param position: position, defaults to None
    :type position: str, optional
    :param web_site: web_site, defaults to None
    :type web_site: str, optional
    :param mobile: mobile, defaults to None
    :type mobile: str, optional
    :param fax: fax, defaults to None
    :type fax: str, optional
    :param address: address, defaults to None
    :type address: Address, optional
    :param phone: phone, defaults to None
    :type phone: str, optional
    :param email: email, defaults to None
    :type email: str, optional
    :param home_phone: home_phone, defaults to None
    :type home_phone: str, optional
    """

    def __init__(
        self,
        role: PropertyContactRole = None,
        is_contact: bool = None,
        name: str = None,
        contact_name: str = None,
        contact_phone: str = None,
        company_name: str = None,
        company_organization: str = None,
        company_web_site: str = None,
        company_phone: str = None,
        position: str = None,
        web_site: str = None,
        mobile: str = None,
        fax: str = None,
        address: Address = None,
        phone: str = None,
        email: str = None,
        home_phone: str = None,
        **kwargs,
    ):
        """PropertyContact

        :param role: role, defaults to None
        :type role: PropertyContactRole, optional
        :param is_contact: is_contact, defaults to None
        :type is_contact: bool, optional
        :param name: name, defaults to None
        :type name: str, optional
        :param contact_name: contact_name, defaults to None
        :type contact_name: str, optional
        :param contact_phone: contact_phone, defaults to None
        :type contact_phone: str, optional
        :param company_name: company_name, defaults to None
        :type company_name: str, optional
        :param company_organization: company_organization, defaults to None
        :type company_organization: str, optional
        :param company_web_site: company_web_site, defaults to None
        :type company_web_site: str, optional
        :param company_phone: company_phone, defaults to None
        :type company_phone: str, optional
        :param position: position, defaults to None
        :type position: str, optional
        :param web_site: web_site, defaults to None
        :type web_site: str, optional
        :param mobile: mobile, defaults to None
        :type mobile: str, optional
        :param fax: fax, defaults to None
        :type fax: str, optional
        :param address: address, defaults to None
        :type address: Address, optional
        :param phone: phone, defaults to None
        :type phone: str, optional
        :param email: email, defaults to None
        :type email: str, optional
        :param home_phone: home_phone, defaults to None
        :type home_phone: str, optional
        """
        if role is not None:
            self.role = self._enum_matching(role, PropertyContactRole.list(), "role")
        if is_contact is not None:
            self.is_contact = is_contact
        if name is not None:
            self.name = self._define_str("name", name, nullable=True)
        if contact_name is not None:
            self.contact_name = self._define_str(
                "contact_name", contact_name, nullable=True
            )
        if contact_phone is not None:
            self.contact_phone = self._define_str(
                "contact_phone", contact_phone, nullable=True
            )
        if company_name is not None:
            self.company_name = self._define_str(
                "company_name", company_name, nullable=True
            )
        if company_organization is not None:
            self.company_organization = self._define_str(
                "company_organization", company_organization, nullable=True
            )
        if company_web_site is not None:
            self.company_web_site = self._define_str(
                "company_web_site", company_web_site, nullable=True
            )
        if company_phone is not None:
            self.company_phone = self._define_str(
                "company_phone", company_phone, nullable=True
            )
        if position is not None:
            self.position = self._define_str("position", position, nullable=True)
        if web_site is not None:
            self.web_site = self._define_str("web_site", web_site, nullable=True)
        if mobile is not None:
            self.mobile = self._define_str("mobile", mobile, nullable=True)
        if fax is not None:
            self.fax = self._define_str("fax", fax, nullable=True)
        if address is not None:
            self.address = self._define_object(address, Address)
        if phone is not None:
            self.phone = self._define_str("phone", phone, nullable=True)
        if email is not None:
            self.email = self._define_str("email", email, nullable=True)
        if home_phone is not None:
            self.home_phone = self._define_str("home_phone", home_phone, nullable=True)
        self._kwargs = kwargs
