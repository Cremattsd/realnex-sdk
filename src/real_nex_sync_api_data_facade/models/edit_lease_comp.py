# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .utils.base_model import BaseModel
from .edit_comp_space import EditCompSpace
from .edit_comp_contact import EditCompContact


@JsonMap(
    {
        "user_key": "userKey",
        "team_key": "teamKey",
        "space_key": "spaceKey",
        "lessee_principal_key": "lesseePrincipalKey",
        "lessor_principal_key": "lessorPrincipalKey",
        "procuring_principal_key": "procuringPrincipalKey",
        "listing_principal_key": "listingPrincipalKey",
        "lessee_contact": "lesseeContact",
        "lessor_contact": "lessorContact",
        "procuring_contact": "procuringContact",
        "listing_contact": "listingContact",
    }
)
class EditLeaseComp(BaseModel):
    """EditLeaseComp

    :param user_key: user_key, defaults to None
    :type user_key: str, optional
    :param team_key: team_key, defaults to None
    :type team_key: str, optional
    :param space_key: space_key, defaults to None
    :type space_key: str, optional
    :param lessee_principal_key: lessee_principal_key, defaults to None
    :type lessee_principal_key: str, optional
    :param lessor_principal_key: lessor_principal_key, defaults to None
    :type lessor_principal_key: str, optional
    :param procuring_principal_key: procuring_principal_key, defaults to None
    :type procuring_principal_key: str, optional
    :param listing_principal_key: listing_principal_key, defaults to None
    :type listing_principal_key: str, optional
    :param space: space, defaults to None
    :type space: EditCompSpace, optional
    :param lessee_contact: lessee_contact, defaults to None
    :type lessee_contact: EditCompContact, optional
    :param lessor_contact: lessor_contact, defaults to None
    :type lessor_contact: EditCompContact, optional
    :param procuring_contact: procuring_contact, defaults to None
    :type procuring_contact: EditCompContact, optional
    :param listing_contact: listing_contact, defaults to None
    :type listing_contact: EditCompContact, optional
    """

    def __init__(
        self,
        user_key: str = None,
        team_key: str = None,
        space_key: str = None,
        lessee_principal_key: str = None,
        lessor_principal_key: str = None,
        procuring_principal_key: str = None,
        listing_principal_key: str = None,
        space: EditCompSpace = None,
        lessee_contact: EditCompContact = None,
        lessor_contact: EditCompContact = None,
        procuring_contact: EditCompContact = None,
        listing_contact: EditCompContact = None,
        **kwargs,
    ):
        """EditLeaseComp

        :param user_key: user_key, defaults to None
        :type user_key: str, optional
        :param team_key: team_key, defaults to None
        :type team_key: str, optional
        :param space_key: space_key, defaults to None
        :type space_key: str, optional
        :param lessee_principal_key: lessee_principal_key, defaults to None
        :type lessee_principal_key: str, optional
        :param lessor_principal_key: lessor_principal_key, defaults to None
        :type lessor_principal_key: str, optional
        :param procuring_principal_key: procuring_principal_key, defaults to None
        :type procuring_principal_key: str, optional
        :param listing_principal_key: listing_principal_key, defaults to None
        :type listing_principal_key: str, optional
        :param space: space, defaults to None
        :type space: EditCompSpace, optional
        :param lessee_contact: lessee_contact, defaults to None
        :type lessee_contact: EditCompContact, optional
        :param lessor_contact: lessor_contact, defaults to None
        :type lessor_contact: EditCompContact, optional
        :param procuring_contact: procuring_contact, defaults to None
        :type procuring_contact: EditCompContact, optional
        :param listing_contact: listing_contact, defaults to None
        :type listing_contact: EditCompContact, optional
        """
        if user_key is not None:
            self.user_key = self._define_str("user_key", user_key, nullable=True)
        if team_key is not None:
            self.team_key = self._define_str("team_key", team_key, nullable=True)
        if space_key is not None:
            self.space_key = self._define_str("space_key", space_key, nullable=True)
        if lessee_principal_key is not None:
            self.lessee_principal_key = self._define_str(
                "lessee_principal_key", lessee_principal_key, nullable=True
            )
        if lessor_principal_key is not None:
            self.lessor_principal_key = self._define_str(
                "lessor_principal_key", lessor_principal_key, nullable=True
            )
        if procuring_principal_key is not None:
            self.procuring_principal_key = self._define_str(
                "procuring_principal_key", procuring_principal_key, nullable=True
            )
        if listing_principal_key is not None:
            self.listing_principal_key = self._define_str(
                "listing_principal_key", listing_principal_key, nullable=True
            )
        if space is not None:
            self.space = self._define_object(space, EditCompSpace)
        if lessee_contact is not None:
            self.lessee_contact = self._define_object(lessee_contact, EditCompContact)
        if lessor_contact is not None:
            self.lessor_contact = self._define_object(lessor_contact, EditCompContact)
        if procuring_contact is not None:
            self.procuring_contact = self._define_object(
                procuring_contact, EditCompContact
            )
        if listing_contact is not None:
            self.listing_contact = self._define_object(listing_contact, EditCompContact)
        self._kwargs = kwargs
