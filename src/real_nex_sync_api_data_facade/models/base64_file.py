# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .utils.base_model import BaseModel


@JsonMap(
    {"file_name": "fileName", "file_content": "fileContent", "media_type": "mediaType"}
)
class Base64File(BaseModel):
    """Base64File

    :param file_name: file_name, defaults to None
    :type file_name: str, optional
    :param file_content: file_content, defaults to None
    :type file_content: str, optional
    :param media_type: media_type, defaults to None
    :type media_type: str, optional
    """

    def __init__(
        self,
        file_name: str = None,
        file_content: str = None,
        media_type: str = None,
        **kwargs
    ):
        """Base64File

        :param file_name: file_name, defaults to None
        :type file_name: str, optional
        :param file_content: file_content, defaults to None
        :type file_content: str, optional
        :param media_type: media_type, defaults to None
        :type media_type: str, optional
        """
        if file_name is not None:
            self.file_name = self._define_str("file_name", file_name, nullable=True)
        if file_content is not None:
            self.file_content = self._define_str(
                "file_content", file_content, nullable=True
            )
        if media_type is not None:
            self.media_type = self._define_str("media_type", media_type, nullable=True)
        self._kwargs = kwargs
