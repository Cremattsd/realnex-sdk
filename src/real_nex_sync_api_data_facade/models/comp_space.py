# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .utils.base_model import BaseModel
from .address import Address


@JsonMap(
    {
        "property_name": "propertyName",
        "deal_date": "dealDate",
        "comp_source": "compSource",
        "sub_market": "subMarket",
        "on_market": "onMarket",
        "is_office": "isOffice",
        "is_other": "isOther",
        "is_retail": "isRetail",
        "is_industrial": "isIndustrial",
    }
)
class CompSpace(BaseModel):
    """CompSpace

    :param property_name: property_name, defaults to None
    :type property_name: str, optional
    :param address: address, defaults to None
    :type address: Address, optional
    :param suite: suite, defaults to None
    :type suite: str, optional
    :param floor: floor, defaults to None
    :type floor: str, optional
    :param deal_date: deal_date, defaults to None
    :type deal_date: str, optional
    :param comp_source: comp_source, defaults to None
    :type comp_source: str, optional
    :param sub_market: sub_market, defaults to None
    :type sub_market: str, optional
    :param region: region, defaults to None
    :type region: str, optional
    :param on_market: on_market, defaults to None
    :type on_market: int, optional
    :param is_office: is_office, defaults to None
    :type is_office: bool, optional
    :param is_other: is_other, defaults to None
    :type is_other: bool, optional
    :param is_retail: is_retail, defaults to None
    :type is_retail: bool, optional
    :param is_industrial: is_industrial, defaults to None
    :type is_industrial: bool, optional
    """

    def __init__(
        self,
        property_name: str = None,
        address: Address = None,
        suite: str = None,
        floor: str = None,
        deal_date: str = None,
        comp_source: str = None,
        sub_market: str = None,
        region: str = None,
        on_market: int = None,
        is_office: bool = None,
        is_other: bool = None,
        is_retail: bool = None,
        is_industrial: bool = None,
        **kwargs,
    ):
        """CompSpace

        :param property_name: property_name, defaults to None
        :type property_name: str, optional
        :param address: address, defaults to None
        :type address: Address, optional
        :param suite: suite, defaults to None
        :type suite: str, optional
        :param floor: floor, defaults to None
        :type floor: str, optional
        :param deal_date: deal_date, defaults to None
        :type deal_date: str, optional
        :param comp_source: comp_source, defaults to None
        :type comp_source: str, optional
        :param sub_market: sub_market, defaults to None
        :type sub_market: str, optional
        :param region: region, defaults to None
        :type region: str, optional
        :param on_market: on_market, defaults to None
        :type on_market: int, optional
        :param is_office: is_office, defaults to None
        :type is_office: bool, optional
        :param is_other: is_other, defaults to None
        :type is_other: bool, optional
        :param is_retail: is_retail, defaults to None
        :type is_retail: bool, optional
        :param is_industrial: is_industrial, defaults to None
        :type is_industrial: bool, optional
        """
        if property_name is not None:
            self.property_name = self._define_str(
                "property_name", property_name, nullable=True
            )
        if address is not None:
            self.address = self._define_object(address, Address)
        if suite is not None:
            self.suite = self._define_str("suite", suite, nullable=True)
        if floor is not None:
            self.floor = self._define_str("floor", floor, nullable=True)
        if deal_date is not None:
            self.deal_date = self._define_str("deal_date", deal_date, nullable=True)
        if comp_source is not None:
            self.comp_source = self._define_str(
                "comp_source", comp_source, nullable=True
            )
        if sub_market is not None:
            self.sub_market = self._define_str("sub_market", sub_market, nullable=True)
        if region is not None:
            self.region = self._define_str("region", region, nullable=True)
        if on_market is not None:
            self.on_market = self._define_number("on_market", on_market, nullable=True)
        if is_office is not None:
            self.is_office = is_office
        if is_other is not None:
            self.is_other = is_other
        if is_retail is not None:
            self.is_retail = is_retail
        if is_industrial is not None:
            self.is_industrial = is_industrial
        self._kwargs = kwargs
