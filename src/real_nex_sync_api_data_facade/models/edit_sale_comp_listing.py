# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .utils.base_model import BaseModel


@JsonMap(
    {
        "down_payment": "downPayment",
        "base_rent": "baseRent",
        "vacancy_factor": "vacancyFactor",
        "effective_rent": "effectiveRent",
        "cap_rate": "capRate",
        "percent_down": "percentDown",
        "per_foot": "perFoot",
        "per_acre": "perAcre",
        "per_unit": "perUnit",
        "cash_flow": "cashFlow",
        "cash_on_cash": "cashOnCash",
        "loan_orig": "loanOrig",
        "loan_amount": "loanAmount",
        "loan_rate": "loanRate",
        "loan_term": "loanTerm",
        "loan_periods": "loanPeriods",
        "debt_service": "debtService",
        "loan_type": "loanType",
        "auto_calc": "autoCalc",
        "loan_maturity": "loanMaturity",
        "loan_trans_type": "loanTransType",
        "trans_type": "transType",
        "per_foot_land": "perFootLand",
        "tax_account_number": "taxAccountNumber",
        "tax_amount": "taxAmount",
        "tax_year": "taxYear",
        "tax_deliquent_year": "taxDeliquentYear",
        "taxes_door": "taxesDoor",
    }
)
class EditSaleCompListing(BaseModel):
    """EditSaleCompListing

    :param down_payment: down_payment, defaults to None
    :type down_payment: float, optional
    :param base_rent: base_rent, defaults to None
    :type base_rent: float, optional
    :param reimburse: reimburse, defaults to None
    :type reimburse: float, optional
    :param expenses: expenses, defaults to None
    :type expenses: float, optional
    :param vacancy_factor: vacancy_factor, defaults to None
    :type vacancy_factor: float, optional
    :param gsi: gsi, defaults to None
    :type gsi: float, optional
    :param effective_rent: effective_rent, defaults to None
    :type effective_rent: float, optional
    :param noi: noi, defaults to None
    :type noi: float, optional
    :param cap_rate: cap_rate, defaults to None
    :type cap_rate: float, optional
    :param grm: grm, defaults to None
    :type grm: float, optional
    :param percent_down: percent_down, defaults to None
    :type percent_down: float, optional
    :param per_foot: per_foot, defaults to None
    :type per_foot: float, optional
    :param per_acre: per_acre, defaults to None
    :type per_acre: float, optional
    :param per_unit: per_unit, defaults to None
    :type per_unit: float, optional
    :param cash_flow: cash_flow, defaults to None
    :type cash_flow: float, optional
    :param cash_on_cash: cash_on_cash, defaults to None
    :type cash_on_cash: float, optional
    :param irr: irr, defaults to None
    :type irr: float, optional
    :param loan_orig: loan_orig, defaults to None
    :type loan_orig: str, optional
    :param loan_amount: loan_amount, defaults to None
    :type loan_amount: float, optional
    :param loan_rate: loan_rate, defaults to None
    :type loan_rate: float, optional
    :param loan_term: loan_term, defaults to None
    :type loan_term: int, optional
    :param loan_periods: loan_periods, defaults to None
    :type loan_periods: int, optional
    :param debt_service: debt_service, defaults to None
    :type debt_service: float, optional
    :param lender: lender, defaults to None
    :type lender: str, optional
    :param loan_type: loan_type, defaults to None
    :type loan_type: str, optional
    :param auto_calc: auto_calc, defaults to None
    :type auto_calc: bool, optional
    :param loan_maturity: loan_maturity, defaults to None
    :type loan_maturity: str, optional
    :param loan_trans_type: loan_trans_type, defaults to None
    :type loan_trans_type: str, optional
    :param trans_type: trans_type, defaults to None
    :type trans_type: str, optional
    :param per_foot_land: per_foot_land, defaults to None
    :type per_foot_land: float, optional
    :param tax_account_number: tax_account_number, defaults to None
    :type tax_account_number: str, optional
    :param tax_amount: tax_amount, defaults to None
    :type tax_amount: float, optional
    :param tax_year: tax_year, defaults to None
    :type tax_year: int, optional
    :param tax_deliquent_year: tax_deliquent_year, defaults to None
    :type tax_deliquent_year: int, optional
    :param taxes: taxes, defaults to None
    :type taxes: float, optional
    :param taxes_door: taxes_door, defaults to None
    :type taxes_door: float, optional
    """

    def __init__(
        self,
        down_payment: float = None,
        base_rent: float = None,
        reimburse: float = None,
        expenses: float = None,
        vacancy_factor: float = None,
        gsi: float = None,
        effective_rent: float = None,
        noi: float = None,
        cap_rate: float = None,
        grm: float = None,
        percent_down: float = None,
        per_foot: float = None,
        per_acre: float = None,
        per_unit: float = None,
        cash_flow: float = None,
        cash_on_cash: float = None,
        irr: float = None,
        loan_orig: str = None,
        loan_amount: float = None,
        loan_rate: float = None,
        loan_term: int = None,
        loan_periods: int = None,
        debt_service: float = None,
        lender: str = None,
        loan_type: str = None,
        auto_calc: bool = None,
        loan_maturity: str = None,
        loan_trans_type: str = None,
        trans_type: str = None,
        per_foot_land: float = None,
        tax_account_number: str = None,
        tax_amount: float = None,
        tax_year: int = None,
        tax_deliquent_year: int = None,
        taxes: float = None,
        taxes_door: float = None,
        **kwargs
    ):
        """EditSaleCompListing

        :param down_payment: down_payment, defaults to None
        :type down_payment: float, optional
        :param base_rent: base_rent, defaults to None
        :type base_rent: float, optional
        :param reimburse: reimburse, defaults to None
        :type reimburse: float, optional
        :param expenses: expenses, defaults to None
        :type expenses: float, optional
        :param vacancy_factor: vacancy_factor, defaults to None
        :type vacancy_factor: float, optional
        :param gsi: gsi, defaults to None
        :type gsi: float, optional
        :param effective_rent: effective_rent, defaults to None
        :type effective_rent: float, optional
        :param noi: noi, defaults to None
        :type noi: float, optional
        :param cap_rate: cap_rate, defaults to None
        :type cap_rate: float, optional
        :param grm: grm, defaults to None
        :type grm: float, optional
        :param percent_down: percent_down, defaults to None
        :type percent_down: float, optional
        :param per_foot: per_foot, defaults to None
        :type per_foot: float, optional
        :param per_acre: per_acre, defaults to None
        :type per_acre: float, optional
        :param per_unit: per_unit, defaults to None
        :type per_unit: float, optional
        :param cash_flow: cash_flow, defaults to None
        :type cash_flow: float, optional
        :param cash_on_cash: cash_on_cash, defaults to None
        :type cash_on_cash: float, optional
        :param irr: irr, defaults to None
        :type irr: float, optional
        :param loan_orig: loan_orig, defaults to None
        :type loan_orig: str, optional
        :param loan_amount: loan_amount, defaults to None
        :type loan_amount: float, optional
        :param loan_rate: loan_rate, defaults to None
        :type loan_rate: float, optional
        :param loan_term: loan_term, defaults to None
        :type loan_term: int, optional
        :param loan_periods: loan_periods, defaults to None
        :type loan_periods: int, optional
        :param debt_service: debt_service, defaults to None
        :type debt_service: float, optional
        :param lender: lender, defaults to None
        :type lender: str, optional
        :param loan_type: loan_type, defaults to None
        :type loan_type: str, optional
        :param auto_calc: auto_calc, defaults to None
        :type auto_calc: bool, optional
        :param loan_maturity: loan_maturity, defaults to None
        :type loan_maturity: str, optional
        :param loan_trans_type: loan_trans_type, defaults to None
        :type loan_trans_type: str, optional
        :param trans_type: trans_type, defaults to None
        :type trans_type: str, optional
        :param per_foot_land: per_foot_land, defaults to None
        :type per_foot_land: float, optional
        :param tax_account_number: tax_account_number, defaults to None
        :type tax_account_number: str, optional
        :param tax_amount: tax_amount, defaults to None
        :type tax_amount: float, optional
        :param tax_year: tax_year, defaults to None
        :type tax_year: int, optional
        :param tax_deliquent_year: tax_deliquent_year, defaults to None
        :type tax_deliquent_year: int, optional
        :param taxes: taxes, defaults to None
        :type taxes: float, optional
        :param taxes_door: taxes_door, defaults to None
        :type taxes_door: float, optional
        """
        if down_payment is not None:
            self.down_payment = self._define_number(
                "down_payment", down_payment, nullable=True
            )
        if base_rent is not None:
            self.base_rent = self._define_number("base_rent", base_rent, nullable=True)
        if reimburse is not None:
            self.reimburse = self._define_number("reimburse", reimburse, nullable=True)
        if expenses is not None:
            self.expenses = self._define_number("expenses", expenses, nullable=True)
        if vacancy_factor is not None:
            self.vacancy_factor = self._define_number(
                "vacancy_factor", vacancy_factor, nullable=True
            )
        if gsi is not None:
            self.gsi = self._define_number("gsi", gsi, nullable=True)
        if effective_rent is not None:
            self.effective_rent = self._define_number(
                "effective_rent", effective_rent, nullable=True
            )
        if noi is not None:
            self.noi = self._define_number("noi", noi, nullable=True)
        if cap_rate is not None:
            self.cap_rate = self._define_number("cap_rate", cap_rate, nullable=True)
        if grm is not None:
            self.grm = self._define_number("grm", grm, nullable=True)
        if percent_down is not None:
            self.percent_down = self._define_number(
                "percent_down", percent_down, nullable=True
            )
        if per_foot is not None:
            self.per_foot = self._define_number("per_foot", per_foot, nullable=True)
        if per_acre is not None:
            self.per_acre = self._define_number("per_acre", per_acre, nullable=True)
        if per_unit is not None:
            self.per_unit = self._define_number("per_unit", per_unit, nullable=True)
        if cash_flow is not None:
            self.cash_flow = self._define_number("cash_flow", cash_flow, nullable=True)
        if cash_on_cash is not None:
            self.cash_on_cash = self._define_number(
                "cash_on_cash", cash_on_cash, nullable=True
            )
        if irr is not None:
            self.irr = self._define_number("irr", irr, nullable=True)
        if loan_orig is not None:
            self.loan_orig = self._define_str("loan_orig", loan_orig, nullable=True)
        if loan_amount is not None:
            self.loan_amount = self._define_number(
                "loan_amount", loan_amount, nullable=True
            )
        if loan_rate is not None:
            self.loan_rate = self._define_number("loan_rate", loan_rate, nullable=True)
        if loan_term is not None:
            self.loan_term = self._define_number("loan_term", loan_term, nullable=True)
        if loan_periods is not None:
            self.loan_periods = self._define_number(
                "loan_periods", loan_periods, nullable=True
            )
        if debt_service is not None:
            self.debt_service = self._define_number(
                "debt_service", debt_service, nullable=True
            )
        if lender is not None:
            self.lender = self._define_str("lender", lender, nullable=True)
        if loan_type is not None:
            self.loan_type = self._define_str("loan_type", loan_type, nullable=True)
        if auto_calc is not None:
            self.auto_calc = auto_calc
        if loan_maturity is not None:
            self.loan_maturity = self._define_str(
                "loan_maturity", loan_maturity, nullable=True
            )
        if loan_trans_type is not None:
            self.loan_trans_type = self._define_str(
                "loan_trans_type", loan_trans_type, nullable=True
            )
        if trans_type is not None:
            self.trans_type = self._define_str("trans_type", trans_type, nullable=True)
        if per_foot_land is not None:
            self.per_foot_land = self._define_number(
                "per_foot_land", per_foot_land, nullable=True
            )
        if tax_account_number is not None:
            self.tax_account_number = self._define_str(
                "tax_account_number", tax_account_number, nullable=True
            )
        if tax_amount is not None:
            self.tax_amount = self._define_number(
                "tax_amount", tax_amount, nullable=True
            )
        if tax_year is not None:
            self.tax_year = self._define_number("tax_year", tax_year, nullable=True)
        if tax_deliquent_year is not None:
            self.tax_deliquent_year = self._define_number(
                "tax_deliquent_year", tax_deliquent_year, nullable=True
            )
        if taxes is not None:
            self.taxes = self._define_number("taxes", taxes, nullable=True)
        if taxes_door is not None:
            self.taxes_door = self._define_number(
                "taxes_door", taxes_door, nullable=True
            )
        self._kwargs = kwargs
