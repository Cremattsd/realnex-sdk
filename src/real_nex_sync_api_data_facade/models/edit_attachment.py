# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .utils.base_model import BaseModel
from .base64_file import Base64File


@JsonMap(
    {
        "user_key": "userKey",
        "team_key": "teamKey",
        "attachment_type_key": "attachmentTypeKey",
        "attachment_date": "attachmentDate",
    }
)
class EditAttachment(BaseModel):
    """EditAttachment

    :param user_key: user_key, defaults to None
    :type user_key: str, optional
    :param team_key: team_key, defaults to None
    :type team_key: str, optional
    :param file: file, defaults to None
    :type file: Base64File, optional
    :param description: description, defaults to None
    :type description: str, optional
    :param attachment_type_key: attachment_type_key, defaults to None
    :type attachment_type_key: int, optional
    :param attachment_date: attachment_date, defaults to None
    :type attachment_date: str, optional
    :param picture: picture, defaults to None
    :type picture: bool, optional
    """

    def __init__(
        self,
        user_key: str = None,
        team_key: str = None,
        file: Base64File = None,
        description: str = None,
        attachment_type_key: int = None,
        attachment_date: str = None,
        picture: bool = None,
        **kwargs,
    ):
        """EditAttachment

        :param user_key: user_key, defaults to None
        :type user_key: str, optional
        :param team_key: team_key, defaults to None
        :type team_key: str, optional
        :param file: file, defaults to None
        :type file: Base64File, optional
        :param description: description, defaults to None
        :type description: str, optional
        :param attachment_type_key: attachment_type_key, defaults to None
        :type attachment_type_key: int, optional
        :param attachment_date: attachment_date, defaults to None
        :type attachment_date: str, optional
        :param picture: picture, defaults to None
        :type picture: bool, optional
        """
        if user_key is not None:
            self.user_key = self._define_str("user_key", user_key, nullable=True)
        if team_key is not None:
            self.team_key = self._define_str("team_key", team_key, nullable=True)
        if file is not None:
            self.file = self._define_object(file, Base64File)
        if description is not None:
            self.description = self._define_str(
                "description", description, nullable=True
            )
        if attachment_type_key is not None:
            self.attachment_type_key = attachment_type_key
        if attachment_date is not None:
            self.attachment_date = self._define_str(
                "attachment_date", attachment_date, nullable=True
            )
        if picture is not None:
            self.picture = picture
        self._kwargs = kwargs
