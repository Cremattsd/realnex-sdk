# This file was generated by liblab | https://liblab.com/

from typing import List
from .utils.json_map import JsonMap
from .utils.base_model import BaseModel


@JsonMap(
    {
        "is_available": "isAvailable",
        "is_retail": "isRetail",
        "is_vacant": "isVacant",
        "is_industrial": "isIndustrial",
        "is_office": "isOffice",
        "is_sublease": "isSublease",
        "is_other": "isOther",
        "tenant_principal_key": "tenantPrincipalKey",
        "lease_commencement": "leaseCommencement",
        "rent_per_sqft": "rentPerSqft",
        "lease_expiry": "leaseExpiry",
        "rent_per_month": "rentPerMonth",
        "lease_term": "leaseTerm",
        "lease_type": "leaseType",
        "web_site": "webSite",
        "object_groups": "objectGroups",
    }
)
class CreateSpace(BaseModel):
    """CreateSpace

    :param floor: floor, defaults to None
    :type floor: str, optional
    :param suite: suite, defaults to None
    :type suite: str, optional
    :param size: size, defaults to None
    :type size: float, optional
    :param is_available: is_available, defaults to None
    :type is_available: bool, optional
    :param is_retail: is_retail, defaults to None
    :type is_retail: bool, optional
    :param is_vacant: is_vacant, defaults to None
    :type is_vacant: bool, optional
    :param is_industrial: is_industrial, defaults to None
    :type is_industrial: bool, optional
    :param is_office: is_office, defaults to None
    :type is_office: bool, optional
    :param is_sublease: is_sublease, defaults to None
    :type is_sublease: bool, optional
    :param is_other: is_other, defaults to None
    :type is_other: bool, optional
    :param tenant_principal_key: tenant_principal_key, defaults to None
    :type tenant_principal_key: str, optional
    :param lease_commencement: lease_commencement, defaults to None
    :type lease_commencement: str, optional
    :param rent_per_sqft: rent_per_sqft, defaults to None
    :type rent_per_sqft: float, optional
    :param lease_expiry: lease_expiry, defaults to None
    :type lease_expiry: str, optional
    :param rent_per_month: rent_per_month, defaults to None
    :type rent_per_month: float, optional
    :param lease_term: lease_term, defaults to None
    :type lease_term: str, optional
    :param lease_type: lease_type, defaults to None
    :type lease_type: str, optional
    :param web_site: web_site, defaults to None
    :type web_site: str, optional
    :param object_groups: object_groups, defaults to None
    :type object_groups: List[str], optional
    """

    def __init__(
        self,
        floor: str = None,
        suite: str = None,
        size: float = None,
        is_available: bool = None,
        is_retail: bool = None,
        is_vacant: bool = None,
        is_industrial: bool = None,
        is_office: bool = None,
        is_sublease: bool = None,
        is_other: bool = None,
        tenant_principal_key: str = None,
        lease_commencement: str = None,
        rent_per_sqft: float = None,
        lease_expiry: str = None,
        rent_per_month: float = None,
        lease_term: str = None,
        lease_type: str = None,
        web_site: str = None,
        object_groups: List[str] = None,
        **kwargs
    ):
        """CreateSpace

        :param floor: floor, defaults to None
        :type floor: str, optional
        :param suite: suite, defaults to None
        :type suite: str, optional
        :param size: size, defaults to None
        :type size: float, optional
        :param is_available: is_available, defaults to None
        :type is_available: bool, optional
        :param is_retail: is_retail, defaults to None
        :type is_retail: bool, optional
        :param is_vacant: is_vacant, defaults to None
        :type is_vacant: bool, optional
        :param is_industrial: is_industrial, defaults to None
        :type is_industrial: bool, optional
        :param is_office: is_office, defaults to None
        :type is_office: bool, optional
        :param is_sublease: is_sublease, defaults to None
        :type is_sublease: bool, optional
        :param is_other: is_other, defaults to None
        :type is_other: bool, optional
        :param tenant_principal_key: tenant_principal_key, defaults to None
        :type tenant_principal_key: str, optional
        :param lease_commencement: lease_commencement, defaults to None
        :type lease_commencement: str, optional
        :param rent_per_sqft: rent_per_sqft, defaults to None
        :type rent_per_sqft: float, optional
        :param lease_expiry: lease_expiry, defaults to None
        :type lease_expiry: str, optional
        :param rent_per_month: rent_per_month, defaults to None
        :type rent_per_month: float, optional
        :param lease_term: lease_term, defaults to None
        :type lease_term: str, optional
        :param lease_type: lease_type, defaults to None
        :type lease_type: str, optional
        :param web_site: web_site, defaults to None
        :type web_site: str, optional
        :param object_groups: object_groups, defaults to None
        :type object_groups: List[str], optional
        """
        if floor is not None:
            self.floor = self._define_str("floor", floor, nullable=True)
        if suite is not None:
            self.suite = self._define_str("suite", suite, nullable=True)
        if size is not None:
            self.size = self._define_number("size", size, nullable=True)
        if is_available is not None:
            self.is_available = is_available
        if is_retail is not None:
            self.is_retail = is_retail
        if is_vacant is not None:
            self.is_vacant = is_vacant
        if is_industrial is not None:
            self.is_industrial = is_industrial
        if is_office is not None:
            self.is_office = is_office
        if is_sublease is not None:
            self.is_sublease = is_sublease
        if is_other is not None:
            self.is_other = is_other
        if tenant_principal_key is not None:
            self.tenant_principal_key = self._define_str(
                "tenant_principal_key", tenant_principal_key, nullable=True
            )
        if lease_commencement is not None:
            self.lease_commencement = self._define_str(
                "lease_commencement", lease_commencement, nullable=True
            )
        if rent_per_sqft is not None:
            self.rent_per_sqft = self._define_number(
                "rent_per_sqft", rent_per_sqft, nullable=True
            )
        if lease_expiry is not None:
            self.lease_expiry = self._define_str(
                "lease_expiry", lease_expiry, nullable=True
            )
        if rent_per_month is not None:
            self.rent_per_month = self._define_number(
                "rent_per_month", rent_per_month, nullable=True
            )
        if lease_term is not None:
            self.lease_term = self._define_str("lease_term", lease_term, nullable=True)
        if lease_type is not None:
            self.lease_type = self._define_str("lease_type", lease_type, nullable=True)
        if web_site is not None:
            self.web_site = self._define_str("web_site", web_site, nullable=True)
        if object_groups is not None:
            self.object_groups = object_groups
        self._kwargs = kwargs
