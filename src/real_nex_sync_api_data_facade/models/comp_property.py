# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .utils.base_model import BaseModel
from .address import Address


@JsonMap(
    {
        "property_name": "propertyName",
        "cross_streets": "crossStreets",
        "address_number1": "addressNumber1",
        "address_number2": "addressNumber2",
        "address_direction": "addressDirection",
        "address_street": "addressStreet",
        "address_suite": "addressSuite",
        "property_type_key": "propertyTypeKey",
        "sale_price": "salePrice",
        "sale_date": "saleDate",
    }
)
class CompProperty(BaseModel):
    """CompProperty

    :param property_name: property_name, defaults to None
    :type property_name: str, optional
    :param address: address, defaults to None
    :type address: Address, optional
    :param cross_streets: cross_streets, defaults to None
    :type cross_streets: str, optional
    :param address_number1: address_number1, defaults to None
    :type address_number1: str, optional
    :param address_number2: address_number2, defaults to None
    :type address_number2: str, optional
    :param address_direction: address_direction, defaults to None
    :type address_direction: str, optional
    :param address_street: address_street, defaults to None
    :type address_street: str, optional
    :param address_suite: address_suite, defaults to None
    :type address_suite: str, optional
    :param property_type_key: property_type_key, defaults to None
    :type property_type_key: int, optional
    :param sale_price: sale_price, defaults to None
    :type sale_price: float, optional
    :param sale_date: sale_date, defaults to None
    :type sale_date: str, optional
    """

    def __init__(
        self,
        property_name: str = None,
        address: Address = None,
        cross_streets: str = None,
        address_number1: str = None,
        address_number2: str = None,
        address_direction: str = None,
        address_street: str = None,
        address_suite: str = None,
        property_type_key: int = None,
        sale_price: float = None,
        sale_date: str = None,
        **kwargs,
    ):
        """CompProperty

        :param property_name: property_name, defaults to None
        :type property_name: str, optional
        :param address: address, defaults to None
        :type address: Address, optional
        :param cross_streets: cross_streets, defaults to None
        :type cross_streets: str, optional
        :param address_number1: address_number1, defaults to None
        :type address_number1: str, optional
        :param address_number2: address_number2, defaults to None
        :type address_number2: str, optional
        :param address_direction: address_direction, defaults to None
        :type address_direction: str, optional
        :param address_street: address_street, defaults to None
        :type address_street: str, optional
        :param address_suite: address_suite, defaults to None
        :type address_suite: str, optional
        :param property_type_key: property_type_key, defaults to None
        :type property_type_key: int, optional
        :param sale_price: sale_price, defaults to None
        :type sale_price: float, optional
        :param sale_date: sale_date, defaults to None
        :type sale_date: str, optional
        """
        if property_name is not None:
            self.property_name = self._define_str(
                "property_name", property_name, nullable=True
            )
        if address is not None:
            self.address = self._define_object(address, Address)
        if cross_streets is not None:
            self.cross_streets = self._define_str(
                "cross_streets", cross_streets, nullable=True
            )
        if address_number1 is not None:
            self.address_number1 = self._define_str(
                "address_number1", address_number1, nullable=True
            )
        if address_number2 is not None:
            self.address_number2 = self._define_str(
                "address_number2", address_number2, nullable=True
            )
        if address_direction is not None:
            self.address_direction = self._define_str(
                "address_direction", address_direction, nullable=True
            )
        if address_street is not None:
            self.address_street = self._define_str(
                "address_street", address_street, nullable=True
            )
        if address_suite is not None:
            self.address_suite = self._define_str(
                "address_suite", address_suite, nullable=True
            )
        if property_type_key is not None:
            self.property_type_key = self._define_number(
                "property_type_key", property_type_key, nullable=True
            )
        if sale_price is not None:
            self.sale_price = self._define_number(
                "sale_price", sale_price, nullable=True
            )
        if sale_date is not None:
            self.sale_date = self._define_str("sale_date", sale_date, nullable=True)
        self._kwargs = kwargs
