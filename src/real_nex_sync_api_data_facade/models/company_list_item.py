# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .utils.base_model import BaseModel
from .address import Address
from .history import History
from .object_group_list_item import ObjectGroupListItem


@JsonMap(
    {
        "user_key": "userKey",
        "team_key": "teamKey",
        "organization_id": "organizationId",
        "subsidiary_id": "subsidiaryId",
        "web_site": "webSite",
        "do_not_call": "doNotCall",
        "do_not_email": "doNotEmail",
        "do_not_fax": "doNotFax",
        "do_not_mail": "doNotMail",
        "last_activity": "lastActivity",
        "object_groups": "objectGroups",
    }
)
class CompanyListItem(BaseModel):
    """CompanyListItem

    :param key: key, defaults to None
    :type key: str, optional
    :param user_key: user_key, defaults to None
    :type user_key: str, optional
    :param team_key: team_key, defaults to None
    :type team_key: str, optional
    :param organization_id: organization_id, defaults to None
    :type organization_id: str, optional
    :param subsidiary_id: subsidiary_id, defaults to None
    :type subsidiary_id: str, optional
    :param investor: investor, defaults to None
    :type investor: bool, optional
    :param tenant: tenant, defaults to None
    :type tenant: bool, optional
    :param agent: agent, defaults to None
    :type agent: bool, optional
    :param vendor: vendor, defaults to None
    :type vendor: bool, optional
    :param personal: personal, defaults to None
    :type personal: bool, optional
    :param prospect: prospect, defaults to None
    :type prospect: bool, optional
    :param phone: phone, defaults to None
    :type phone: str, optional
    :param fax: fax, defaults to None
    :type fax: str, optional
    :param email: email, defaults to None
    :type email: str, optional
    :param web_site: web_site, defaults to None
    :type web_site: str, optional
    :param do_not_call: do_not_call, defaults to None
    :type do_not_call: bool, optional
    :param do_not_email: do_not_email, defaults to None
    :type do_not_email: bool, optional
    :param do_not_fax: do_not_fax, defaults to None
    :type do_not_fax: bool, optional
    :param do_not_mail: do_not_mail, defaults to None
    :type do_not_mail: bool, optional
    :param address: address, defaults to None
    :type address: Address, optional
    :param last_activity: last_activity, defaults to None
    :type last_activity: History, optional
    :param object_groups: object_groups, defaults to None
    :type object_groups: List[ObjectGroupListItem], optional
    """

    def __init__(
        self,
        key: str = None,
        user_key: str = None,
        team_key: str = None,
        organization_id: str = None,
        subsidiary_id: str = None,
        investor: bool = None,
        tenant: bool = None,
        agent: bool = None,
        vendor: bool = None,
        personal: bool = None,
        prospect: bool = None,
        phone: str = None,
        fax: str = None,
        email: str = None,
        web_site: str = None,
        do_not_call: bool = None,
        do_not_email: bool = None,
        do_not_fax: bool = None,
        do_not_mail: bool = None,
        address: Address = None,
        last_activity: History = None,
        object_groups: List[ObjectGroupListItem] = None,
        **kwargs,
    ):
        """CompanyListItem

        :param key: key, defaults to None
        :type key: str, optional
        :param user_key: user_key, defaults to None
        :type user_key: str, optional
        :param team_key: team_key, defaults to None
        :type team_key: str, optional
        :param organization_id: organization_id, defaults to None
        :type organization_id: str, optional
        :param subsidiary_id: subsidiary_id, defaults to None
        :type subsidiary_id: str, optional
        :param investor: investor, defaults to None
        :type investor: bool, optional
        :param tenant: tenant, defaults to None
        :type tenant: bool, optional
        :param agent: agent, defaults to None
        :type agent: bool, optional
        :param vendor: vendor, defaults to None
        :type vendor: bool, optional
        :param personal: personal, defaults to None
        :type personal: bool, optional
        :param prospect: prospect, defaults to None
        :type prospect: bool, optional
        :param phone: phone, defaults to None
        :type phone: str, optional
        :param fax: fax, defaults to None
        :type fax: str, optional
        :param email: email, defaults to None
        :type email: str, optional
        :param web_site: web_site, defaults to None
        :type web_site: str, optional
        :param do_not_call: do_not_call, defaults to None
        :type do_not_call: bool, optional
        :param do_not_email: do_not_email, defaults to None
        :type do_not_email: bool, optional
        :param do_not_fax: do_not_fax, defaults to None
        :type do_not_fax: bool, optional
        :param do_not_mail: do_not_mail, defaults to None
        :type do_not_mail: bool, optional
        :param address: address, defaults to None
        :type address: Address, optional
        :param last_activity: last_activity, defaults to None
        :type last_activity: History, optional
        :param object_groups: object_groups, defaults to None
        :type object_groups: List[ObjectGroupListItem], optional
        """
        if key is not None:
            self.key = self._define_str("key", key, nullable=True)
        if user_key is not None:
            self.user_key = user_key
        if team_key is not None:
            self.team_key = self._define_str("team_key", team_key, nullable=True)
        if organization_id is not None:
            self.organization_id = self._define_str(
                "organization_id", organization_id, nullable=True
            )
        if subsidiary_id is not None:
            self.subsidiary_id = self._define_str(
                "subsidiary_id", subsidiary_id, nullable=True
            )
        if investor is not None:
            self.investor = investor
        if tenant is not None:
            self.tenant = tenant
        if agent is not None:
            self.agent = agent
        if vendor is not None:
            self.vendor = vendor
        if personal is not None:
            self.personal = personal
        if prospect is not None:
            self.prospect = prospect
        if phone is not None:
            self.phone = self._define_str("phone", phone, nullable=True)
        if fax is not None:
            self.fax = self._define_str("fax", fax, nullable=True)
        if email is not None:
            self.email = self._define_str("email", email, nullable=True)
        if web_site is not None:
            self.web_site = self._define_str("web_site", web_site, nullable=True)
        if do_not_call is not None:
            self.do_not_call = do_not_call
        if do_not_email is not None:
            self.do_not_email = do_not_email
        if do_not_fax is not None:
            self.do_not_fax = do_not_fax
        if do_not_mail is not None:
            self.do_not_mail = do_not_mail
        if address is not None:
            self.address = self._define_object(address, Address)
        if last_activity is not None:
            self.last_activity = self._define_object(last_activity, History)
        if object_groups is not None:
            self.object_groups = self._define_list(object_groups, ObjectGroupListItem)
        self._kwargs = kwargs
