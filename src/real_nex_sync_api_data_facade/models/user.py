# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .utils.base_model import BaseModel


@JsonMap({"user_id": "userId", "user_name": "userName", "login_name": "loginName"})
class User(BaseModel):
    """User

    :param key: key, defaults to None
    :type key: str, optional
    :param user_id: user_id, defaults to None
    :type user_id: str, optional
    :param user_name: user_name, defaults to None
    :type user_name: str, optional
    :param login_name: login_name, defaults to None
    :type login_name: str, optional
    :param active: active, defaults to None
    :type active: bool, optional
    """

    def __init__(
        self,
        key: str = None,
        user_id: str = None,
        user_name: str = None,
        login_name: str = None,
        active: bool = None,
        **kwargs
    ):
        """User

        :param key: key, defaults to None
        :type key: str, optional
        :param user_id: user_id, defaults to None
        :type user_id: str, optional
        :param user_name: user_name, defaults to None
        :type user_name: str, optional
        :param login_name: login_name, defaults to None
        :type login_name: str, optional
        :param active: active, defaults to None
        :type active: bool, optional
        """
        if key is not None:
            self.key = key
        if user_id is not None:
            self.user_id = self._define_str("user_id", user_id, nullable=True)
        if user_name is not None:
            self.user_name = self._define_str("user_name", user_name, nullable=True)
        if login_name is not None:
            self.login_name = self._define_str("login_name", login_name, nullable=True)
        if active is not None:
            self.active = active
        self._kwargs = kwargs
