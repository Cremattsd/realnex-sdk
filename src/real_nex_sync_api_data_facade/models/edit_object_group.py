# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .utils.base_model import BaseModel
from .object_type import ObjectType


@JsonMap({"user_key": "userKey", "team_key": "teamKey", "type_": "type"})
class EditObjectGroup(BaseModel):
    """EditObjectGroup

    :param user_key: user_key, defaults to None
    :type user_key: str, optional
    :param team_key: team_key, defaults to None
    :type team_key: str, optional
    :param type_: type_, defaults to None
    :type type_: ObjectType, optional
    :param name: name, defaults to None
    :type name: str, optional
    """

    def __init__(
        self,
        user_key: str = None,
        team_key: str = None,
        type_: ObjectType = None,
        name: str = None,
        **kwargs,
    ):
        """EditObjectGroup

        :param user_key: user_key, defaults to None
        :type user_key: str, optional
        :param team_key: team_key, defaults to None
        :type team_key: str, optional
        :param type_: type_, defaults to None
        :type type_: ObjectType, optional
        :param name: name, defaults to None
        :type name: str, optional
        """
        if user_key is not None:
            self.user_key = self._define_str("user_key", user_key, nullable=True)
        if team_key is not None:
            self.team_key = self._define_str("team_key", team_key, nullable=True)
        if type_ is not None:
            self.type_ = self._enum_matching(type_, ObjectType.list(), "type_")
        if name is not None:
            self.name = self._define_str("name", name, nullable=True)
        self._kwargs = kwargs
