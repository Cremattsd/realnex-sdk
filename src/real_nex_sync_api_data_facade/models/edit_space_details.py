# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .utils.base_model import BaseModel
from .user_fields import UserFields
from .user_data_fields import UserDataFields


@JsonMap(
    {
        "usable_area": "usableArea",
        "load_factor": "loadFactor",
        "percent_rent": "percentRent",
        "office_area": "officeArea",
        "grade_doors": "gradeDoors",
        "dock_doors": "dockDoors",
        "truck_doors": "truckDoors",
        "clear_ht": "clearHt",
        "rail_service": "railService",
        "exp_stop": "expStop",
        "effective_rent": "effectiveRent",
        "lease_commencement": "leaseCommencement",
        "rent_per_sqft": "rentPerSqft",
        "lease_expiry": "leaseExpiry",
        "rent_per_month": "rentPerMonth",
        "lease_term": "leaseTerm",
        "lease_type": "leaseType",
        "web_site": "webSite",
        "business_type": "businessType",
        "days_on_market": "daysOnMarket",
        "escalation_date": "escalationDate",
        "max_divisible": "maxDivisible",
        "min_divisible": "minDivisible",
        "nnn_expenses": "nnnExpenses",
        "occupancy_date": "occupancyDate",
        "off_market": "offMarket",
        "on_market": "onMarket",
        "ror_date": "rorDate",
        "rot_date": "rotDate",
        "tenant_pro_rata_share": "tenantProRataShare",
        "warehouse_sf": "warehouseSf",
        "annual_rate_per_sf": "annualRatePerSf",
        "total_annual_rate": "totalAnnualRate",
        "security_deposit": "securityDeposit",
        "retail_sf": "retailSf",
        "rentable_sf": "rentableSf",
        "space_id": "spaceId",
        "total_lease_value": "totalLeaseValue",
        "rent_abatement": "rentAbatement",
        "user_fields": "userFields",
        "user_data_fields": "userDataFields",
    }
)
class EditSpaceDetails(BaseModel):
    """EditSpaceDetails

    :param cam: cam, defaults to None
    :type cam: float, optional
    :param occupancy: occupancy, defaults to None
    :type occupancy: str, optional
    :param taxes: taxes, defaults to None
    :type taxes: float, optional
    :param insurance: insurance, defaults to None
    :type insurance: float, optional
    :param usable_area: usable_area, defaults to None
    :type usable_area: float, optional
    :param load_factor: load_factor, defaults to None
    :type load_factor: float, optional
    :param frontage: frontage, defaults to None
    :type frontage: str, optional
    :param percent_rent: percent_rent, defaults to None
    :type percent_rent: str, optional
    :param office_area: office_area, defaults to None
    :type office_area: float, optional
    :param grade_doors: grade_doors, defaults to None
    :type grade_doors: str, optional
    :param dock_doors: dock_doors, defaults to None
    :type dock_doors: str, optional
    :param truck_doors: truck_doors, defaults to None
    :type truck_doors: str, optional
    :param clear_ht: clear_ht, defaults to None
    :type clear_ht: str, optional
    :param power: power, defaults to None
    :type power: str, optional
    :param rail_service: rail_service, defaults to None
    :type rail_service: str, optional
    :param yard: yard, defaults to None
    :type yard: str, optional
    :param exp_stop: exp_stop, defaults to None
    :type exp_stop: str, optional
    :param effective_rent: effective_rent, defaults to None
    :type effective_rent: float, optional
    :param increases: increases, defaults to None
    :type increases: str, optional
    :param options: options, defaults to None
    :type options: str, optional
    :param tia: tia, defaults to None
    :type tia: str, optional
    :param lease_commencement: lease_commencement, defaults to None
    :type lease_commencement: str, optional
    :param rent_per_sqft: rent_per_sqft, defaults to None
    :type rent_per_sqft: float, optional
    :param lease_expiry: lease_expiry, defaults to None
    :type lease_expiry: str, optional
    :param rent_per_month: rent_per_month, defaults to None
    :type rent_per_month: float, optional
    :param lease_term: lease_term, defaults to None
    :type lease_term: str, optional
    :param lease_type: lease_type, defaults to None
    :type lease_type: str, optional
    :param web_site: web_site, defaults to None
    :type web_site: str, optional
    :param business_type: business_type, defaults to None
    :type business_type: str, optional
    :param days_on_market: days_on_market, defaults to None
    :type days_on_market: int, optional
    :param escalation_date: escalation_date, defaults to None
    :type escalation_date: str, optional
    :param max_divisible: max_divisible, defaults to None
    :type max_divisible: float, optional
    :param min_divisible: min_divisible, defaults to None
    :type min_divisible: float, optional
    :param nnn_expenses: nnn_expenses, defaults to None
    :type nnn_expenses: float, optional
    :param occupancy_date: occupancy_date, defaults to None
    :type occupancy_date: str, optional
    :param off_market: off_market, defaults to None
    :type off_market: str, optional
    :param on_market: on_market, defaults to None
    :type on_market: str, optional
    :param ror_date: ror_date, defaults to None
    :type ror_date: str, optional
    :param rot_date: rot_date, defaults to None
    :type rot_date: str, optional
    :param submarket: submarket, defaults to None
    :type submarket: str, optional
    :param tenant_pro_rata_share: tenant_pro_rata_share, defaults to None
    :type tenant_pro_rata_share: float, optional
    :param warehouse_sf: warehouse_sf, defaults to None
    :type warehouse_sf: float, optional
    :param annual_rate_per_sf: annual_rate_per_sf, defaults to None
    :type annual_rate_per_sf: float, optional
    :param total_annual_rate: total_annual_rate, defaults to None
    :type total_annual_rate: float, optional
    :param security_deposit: security_deposit, defaults to None
    :type security_deposit: float, optional
    :param retail_sf: retail_sf, defaults to None
    :type retail_sf: float, optional
    :param rentable_sf: rentable_sf, defaults to None
    :type rentable_sf: float, optional
    :param space_id: space_id, defaults to None
    :type space_id: int, optional
    :param total_lease_value: total_lease_value, defaults to None
    :type total_lease_value: float, optional
    :param rent_abatement: rent_abatement, defaults to None
    :type rent_abatement: float, optional
    :param user_fields: user_fields, defaults to None
    :type user_fields: UserFields, optional
    :param user_data_fields: user_data_fields, defaults to None
    :type user_data_fields: UserDataFields, optional
    """

    def __init__(
        self,
        cam: float = None,
        occupancy: str = None,
        taxes: float = None,
        insurance: float = None,
        usable_area: float = None,
        load_factor: float = None,
        frontage: str = None,
        percent_rent: str = None,
        office_area: float = None,
        grade_doors: str = None,
        dock_doors: str = None,
        truck_doors: str = None,
        clear_ht: str = None,
        power: str = None,
        rail_service: str = None,
        yard: str = None,
        exp_stop: str = None,
        effective_rent: float = None,
        increases: str = None,
        options: str = None,
        tia: str = None,
        lease_commencement: str = None,
        rent_per_sqft: float = None,
        lease_expiry: str = None,
        rent_per_month: float = None,
        lease_term: str = None,
        lease_type: str = None,
        web_site: str = None,
        business_type: str = None,
        days_on_market: int = None,
        escalation_date: str = None,
        max_divisible: float = None,
        min_divisible: float = None,
        nnn_expenses: float = None,
        occupancy_date: str = None,
        off_market: str = None,
        on_market: str = None,
        ror_date: str = None,
        rot_date: str = None,
        submarket: str = None,
        tenant_pro_rata_share: float = None,
        warehouse_sf: float = None,
        annual_rate_per_sf: float = None,
        total_annual_rate: float = None,
        security_deposit: float = None,
        retail_sf: float = None,
        rentable_sf: float = None,
        space_id: int = None,
        total_lease_value: float = None,
        rent_abatement: float = None,
        user_fields: UserFields = None,
        user_data_fields: UserDataFields = None,
        **kwargs,
    ):
        """EditSpaceDetails

        :param cam: cam, defaults to None
        :type cam: float, optional
        :param occupancy: occupancy, defaults to None
        :type occupancy: str, optional
        :param taxes: taxes, defaults to None
        :type taxes: float, optional
        :param insurance: insurance, defaults to None
        :type insurance: float, optional
        :param usable_area: usable_area, defaults to None
        :type usable_area: float, optional
        :param load_factor: load_factor, defaults to None
        :type load_factor: float, optional
        :param frontage: frontage, defaults to None
        :type frontage: str, optional
        :param percent_rent: percent_rent, defaults to None
        :type percent_rent: str, optional
        :param office_area: office_area, defaults to None
        :type office_area: float, optional
        :param grade_doors: grade_doors, defaults to None
        :type grade_doors: str, optional
        :param dock_doors: dock_doors, defaults to None
        :type dock_doors: str, optional
        :param truck_doors: truck_doors, defaults to None
        :type truck_doors: str, optional
        :param clear_ht: clear_ht, defaults to None
        :type clear_ht: str, optional
        :param power: power, defaults to None
        :type power: str, optional
        :param rail_service: rail_service, defaults to None
        :type rail_service: str, optional
        :param yard: yard, defaults to None
        :type yard: str, optional
        :param exp_stop: exp_stop, defaults to None
        :type exp_stop: str, optional
        :param effective_rent: effective_rent, defaults to None
        :type effective_rent: float, optional
        :param increases: increases, defaults to None
        :type increases: str, optional
        :param options: options, defaults to None
        :type options: str, optional
        :param tia: tia, defaults to None
        :type tia: str, optional
        :param lease_commencement: lease_commencement, defaults to None
        :type lease_commencement: str, optional
        :param rent_per_sqft: rent_per_sqft, defaults to None
        :type rent_per_sqft: float, optional
        :param lease_expiry: lease_expiry, defaults to None
        :type lease_expiry: str, optional
        :param rent_per_month: rent_per_month, defaults to None
        :type rent_per_month: float, optional
        :param lease_term: lease_term, defaults to None
        :type lease_term: str, optional
        :param lease_type: lease_type, defaults to None
        :type lease_type: str, optional
        :param web_site: web_site, defaults to None
        :type web_site: str, optional
        :param business_type: business_type, defaults to None
        :type business_type: str, optional
        :param days_on_market: days_on_market, defaults to None
        :type days_on_market: int, optional
        :param escalation_date: escalation_date, defaults to None
        :type escalation_date: str, optional
        :param max_divisible: max_divisible, defaults to None
        :type max_divisible: float, optional
        :param min_divisible: min_divisible, defaults to None
        :type min_divisible: float, optional
        :param nnn_expenses: nnn_expenses, defaults to None
        :type nnn_expenses: float, optional
        :param occupancy_date: occupancy_date, defaults to None
        :type occupancy_date: str, optional
        :param off_market: off_market, defaults to None
        :type off_market: str, optional
        :param on_market: on_market, defaults to None
        :type on_market: str, optional
        :param ror_date: ror_date, defaults to None
        :type ror_date: str, optional
        :param rot_date: rot_date, defaults to None
        :type rot_date: str, optional
        :param submarket: submarket, defaults to None
        :type submarket: str, optional
        :param tenant_pro_rata_share: tenant_pro_rata_share, defaults to None
        :type tenant_pro_rata_share: float, optional
        :param warehouse_sf: warehouse_sf, defaults to None
        :type warehouse_sf: float, optional
        :param annual_rate_per_sf: annual_rate_per_sf, defaults to None
        :type annual_rate_per_sf: float, optional
        :param total_annual_rate: total_annual_rate, defaults to None
        :type total_annual_rate: float, optional
        :param security_deposit: security_deposit, defaults to None
        :type security_deposit: float, optional
        :param retail_sf: retail_sf, defaults to None
        :type retail_sf: float, optional
        :param rentable_sf: rentable_sf, defaults to None
        :type rentable_sf: float, optional
        :param space_id: space_id, defaults to None
        :type space_id: int, optional
        :param total_lease_value: total_lease_value, defaults to None
        :type total_lease_value: float, optional
        :param rent_abatement: rent_abatement, defaults to None
        :type rent_abatement: float, optional
        :param user_fields: user_fields, defaults to None
        :type user_fields: UserFields, optional
        :param user_data_fields: user_data_fields, defaults to None
        :type user_data_fields: UserDataFields, optional
        """
        if cam is not None:
            self.cam = self._define_number("cam", cam, nullable=True)
        if occupancy is not None:
            self.occupancy = self._define_str("occupancy", occupancy, nullable=True)
        if taxes is not None:
            self.taxes = self._define_number("taxes", taxes, nullable=True)
        if insurance is not None:
            self.insurance = self._define_number("insurance", insurance, nullable=True)
        if usable_area is not None:
            self.usable_area = self._define_number(
                "usable_area", usable_area, nullable=True
            )
        if load_factor is not None:
            self.load_factor = self._define_number(
                "load_factor", load_factor, nullable=True
            )
        if frontage is not None:
            self.frontage = self._define_str("frontage", frontage, nullable=True)
        if percent_rent is not None:
            self.percent_rent = self._define_str(
                "percent_rent", percent_rent, nullable=True
            )
        if office_area is not None:
            self.office_area = self._define_number(
                "office_area", office_area, nullable=True
            )
        if grade_doors is not None:
            self.grade_doors = self._define_str(
                "grade_doors", grade_doors, nullable=True
            )
        if dock_doors is not None:
            self.dock_doors = self._define_str("dock_doors", dock_doors, nullable=True)
        if truck_doors is not None:
            self.truck_doors = self._define_str(
                "truck_doors", truck_doors, nullable=True
            )
        if clear_ht is not None:
            self.clear_ht = self._define_str("clear_ht", clear_ht, nullable=True)
        if power is not None:
            self.power = self._define_str("power", power, nullable=True)
        if rail_service is not None:
            self.rail_service = self._define_str(
                "rail_service", rail_service, nullable=True
            )
        if yard is not None:
            self.yard = self._define_str("yard", yard, nullable=True)
        if exp_stop is not None:
            self.exp_stop = self._define_str("exp_stop", exp_stop, nullable=True)
        if effective_rent is not None:
            self.effective_rent = self._define_number(
                "effective_rent", effective_rent, nullable=True
            )
        if increases is not None:
            self.increases = self._define_str("increases", increases, nullable=True)
        if options is not None:
            self.options = self._define_str("options", options, nullable=True)
        if tia is not None:
            self.tia = self._define_str("tia", tia, nullable=True)
        if lease_commencement is not None:
            self.lease_commencement = self._define_str(
                "lease_commencement", lease_commencement, nullable=True
            )
        if rent_per_sqft is not None:
            self.rent_per_sqft = self._define_number(
                "rent_per_sqft", rent_per_sqft, nullable=True
            )
        if lease_expiry is not None:
            self.lease_expiry = self._define_str(
                "lease_expiry", lease_expiry, nullable=True
            )
        if rent_per_month is not None:
            self.rent_per_month = self._define_number(
                "rent_per_month", rent_per_month, nullable=True
            )
        if lease_term is not None:
            self.lease_term = self._define_str("lease_term", lease_term, nullable=True)
        if lease_type is not None:
            self.lease_type = self._define_str("lease_type", lease_type, nullable=True)
        if web_site is not None:
            self.web_site = self._define_str("web_site", web_site, nullable=True)
        if business_type is not None:
            self.business_type = self._define_str(
                "business_type", business_type, nullable=True
            )
        if days_on_market is not None:
            self.days_on_market = self._define_number(
                "days_on_market", days_on_market, nullable=True
            )
        if escalation_date is not None:
            self.escalation_date = self._define_str(
                "escalation_date", escalation_date, nullable=True
            )
        if max_divisible is not None:
            self.max_divisible = self._define_number(
                "max_divisible", max_divisible, nullable=True
            )
        if min_divisible is not None:
            self.min_divisible = self._define_number(
                "min_divisible", min_divisible, nullable=True
            )
        if nnn_expenses is not None:
            self.nnn_expenses = self._define_number(
                "nnn_expenses", nnn_expenses, nullable=True
            )
        if occupancy_date is not None:
            self.occupancy_date = self._define_str(
                "occupancy_date", occupancy_date, nullable=True
            )
        if off_market is not None:
            self.off_market = self._define_str("off_market", off_market, nullable=True)
        if on_market is not None:
            self.on_market = self._define_str("on_market", on_market, nullable=True)
        if ror_date is not None:
            self.ror_date = self._define_str("ror_date", ror_date, nullable=True)
        if rot_date is not None:
            self.rot_date = self._define_str("rot_date", rot_date, nullable=True)
        if submarket is not None:
            self.submarket = self._define_str("submarket", submarket, nullable=True)
        if tenant_pro_rata_share is not None:
            self.tenant_pro_rata_share = self._define_number(
                "tenant_pro_rata_share", tenant_pro_rata_share, nullable=True
            )
        if warehouse_sf is not None:
            self.warehouse_sf = self._define_number(
                "warehouse_sf", warehouse_sf, nullable=True
            )
        if annual_rate_per_sf is not None:
            self.annual_rate_per_sf = self._define_number(
                "annual_rate_per_sf", annual_rate_per_sf, nullable=True
            )
        if total_annual_rate is not None:
            self.total_annual_rate = self._define_number(
                "total_annual_rate", total_annual_rate, nullable=True
            )
        if security_deposit is not None:
            self.security_deposit = self._define_number(
                "security_deposit", security_deposit, nullable=True
            )
        if retail_sf is not None:
            self.retail_sf = self._define_number("retail_sf", retail_sf, nullable=True)
        if rentable_sf is not None:
            self.rentable_sf = self._define_number(
                "rentable_sf", rentable_sf, nullable=True
            )
        if space_id is not None:
            self.space_id = self._define_number("space_id", space_id, nullable=True)
        if total_lease_value is not None:
            self.total_lease_value = self._define_number(
                "total_lease_value", total_lease_value, nullable=True
            )
        if rent_abatement is not None:
            self.rent_abatement = self._define_number(
                "rent_abatement", rent_abatement, nullable=True
            )
        if user_fields is not None:
            self.user_fields = self._define_object(user_fields, UserFields)
        if user_data_fields is not None:
            self.user_data_fields = self._define_object(
                user_data_fields, UserDataFields
            )
        self._kwargs = kwargs
