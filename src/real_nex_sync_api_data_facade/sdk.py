# This file was generated by liblab | https://liblab.com/

from typing import Union
from .services.client import ClientService
from .services.crm import CrmService
from .services.crm_attachment import CrmAttachmentService
from .services.crm_company import CrmCompanyService
from .services.crm_contact import CrmContactService
from .services.crm_event import CrmEventService
from .services.crm_history import CrmHistoryService
from .services.crm_lease_comp import CrmLeaseCompService
from .services.crm_object_group import CrmObjectGroupService
from .services.crm_o_data import CrmODataService
from .services.crm_project import CrmProjectService
from .services.crm_property import CrmPropertyService
from .services.crm_sale_comp import CrmSaleCompService
from .services.crm_space import CrmSpaceService
from .net.environment import Environment


class RealNexSyncApiDataFacade:
    def __init__(
        self,
        api_key: str = None,
        api_key_header: str = "X-API-KEY",
        base_url: Union[Environment, str] = Environment.DEFAULT,
        timeout: int = 60000,
    ):
        """
        Initializes RealNexSyncApiDataFacade the SDK class.
        """

        self._base_url = (
            base_url.value if isinstance(base_url, Environment) else base_url
        )
        self.client = ClientService(base_url=self._base_url)
        self.crm = CrmService(base_url=self._base_url)
        self.crm_attachment = CrmAttachmentService(base_url=self._base_url)
        self.crm_company = CrmCompanyService(base_url=self._base_url)
        self.crm_contact = CrmContactService(base_url=self._base_url)
        self.crm_event = CrmEventService(base_url=self._base_url)
        self.crm_history = CrmHistoryService(base_url=self._base_url)
        self.crm_lease_comp = CrmLeaseCompService(base_url=self._base_url)
        self.crm_object_group = CrmObjectGroupService(base_url=self._base_url)
        self.crm_o_data = CrmODataService(base_url=self._base_url)
        self.crm_project = CrmProjectService(base_url=self._base_url)
        self.crm_property = CrmPropertyService(base_url=self._base_url)
        self.crm_sale_comp = CrmSaleCompService(base_url=self._base_url)
        self.crm_space = CrmSpaceService(base_url=self._base_url)
        self.set_api_key(api_key, api_key_header)
        self.set_timeout(timeout)

    def set_base_url(self, base_url: Union[Environment, str]):
        """
        Sets the base URL for the entire SDK.

        :param Union[Environment, str] base_url: The base URL to be set.
        :return: The SDK instance.
        """
        self._base_url = (
            base_url.value if isinstance(base_url, Environment) else base_url
        )

        self.client.set_base_url(self._base_url)
        self.crm.set_base_url(self._base_url)
        self.crm_attachment.set_base_url(self._base_url)
        self.crm_company.set_base_url(self._base_url)
        self.crm_contact.set_base_url(self._base_url)
        self.crm_event.set_base_url(self._base_url)
        self.crm_history.set_base_url(self._base_url)
        self.crm_lease_comp.set_base_url(self._base_url)
        self.crm_object_group.set_base_url(self._base_url)
        self.crm_o_data.set_base_url(self._base_url)
        self.crm_project.set_base_url(self._base_url)
        self.crm_property.set_base_url(self._base_url)
        self.crm_sale_comp.set_base_url(self._base_url)
        self.crm_space.set_base_url(self._base_url)

        return self

    def set_api_key(self, api_key: str, api_key_header="X-API-KEY"):
        """
        Sets the api key and the api key header for the entire SDK.
        """
        self.client.set_api_key(api_key, api_key_header)
        self.crm.set_api_key(api_key, api_key_header)
        self.crm_attachment.set_api_key(api_key, api_key_header)
        self.crm_company.set_api_key(api_key, api_key_header)
        self.crm_contact.set_api_key(api_key, api_key_header)
        self.crm_event.set_api_key(api_key, api_key_header)
        self.crm_history.set_api_key(api_key, api_key_header)
        self.crm_lease_comp.set_api_key(api_key, api_key_header)
        self.crm_object_group.set_api_key(api_key, api_key_header)
        self.crm_o_data.set_api_key(api_key, api_key_header)
        self.crm_project.set_api_key(api_key, api_key_header)
        self.crm_property.set_api_key(api_key, api_key_header)
        self.crm_sale_comp.set_api_key(api_key, api_key_header)
        self.crm_space.set_api_key(api_key, api_key_header)

        return self

    def set_timeout(self, timeout: int):
        """
        Sets the timeout for the entire SDK.

        :param int timeout: The timeout (ms) to be set.
        :return: The SDK instance.
        """
        self.client.set_timeout(timeout)
        self.crm.set_timeout(timeout)
        self.crm_attachment.set_timeout(timeout)
        self.crm_company.set_timeout(timeout)
        self.crm_contact.set_timeout(timeout)
        self.crm_event.set_timeout(timeout)
        self.crm_history.set_timeout(timeout)
        self.crm_lease_comp.set_timeout(timeout)
        self.crm_object_group.set_timeout(timeout)
        self.crm_o_data.set_timeout(timeout)
        self.crm_project.set_timeout(timeout)
        self.crm_property.set_timeout(timeout)
        self.crm_sale_comp.set_timeout(timeout)
        self.crm_space.set_timeout(timeout)

        return self


# c029837e0e474b76bc487506e8799df5e3335891efe4fb02bda7a1441840310c
